package xyz.nulldev.kdom.api

import azadev.kotlin.css.Stylesheet
import org.w3c.dom.HTMLElement
import xyz.nulldev.kdom.util.HUGE_STRING

class ElementStyle(content: String) {
    private val generated by lazy {
        val newContent = content
                .replace("\"", "&#34;") // Escape double quote
                .replace("'", "&#39;") // Escape single quote
                .replace("\n", "&#10;") // Escape line feed
                .replace("\r", "&#13;") // Escape carriage return

        "[$PLACEHOLDER_STYLE_KEY~=$PLACEHOLDER_STYLE_VALUE]{$newContent}"
    }

    constructor(gen: Stylesheet.() -> Unit):
            this( Stylesheet { gen(this) }.render() )

    override fun toString() = generated

    companion object {
        internal val PLACEHOLDER_STYLE_KEY = "data-kdom-$HUGE_STRING-kstyle"
        internal val PLACEHOLDER_STYLE_VALUE = "kdom-$HUGE_STRING-placeholder-style"

        fun splitStyleString(string: String) = string.split(" ").filterNot(String::isBlank)
        fun joinStyleString(string: List<String>) = string.joinToString(separator = " ")
        fun appendStyleEntry(element: HTMLElement, entry: String) = element.setAttribute(PLACEHOLDER_STYLE_KEY,
                joinStyleString(
                        splitStyleString(element.getAttribute(PLACEHOLDER_STYLE_KEY) ?: "") + entry
                )
        )
        fun removeStyleEntry(element: HTMLElement, entry: String) = element.setAttribute(PLACEHOLDER_STYLE_KEY,
                joinStyleString(
                        splitStyleString(element.getAttribute(PLACEHOLDER_STYLE_KEY) ?: "") - entry
                )
        )
    }
}